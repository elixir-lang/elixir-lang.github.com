#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd "$DIR"
source "$DIR/filter-lib.sh"

CMD_NAME="htmlproof"

filter_htmlproof() {
  local dir="$DIR/../"
  local cmd="bundle exec htmlproof ./_site --file-ignore /docs/ --only-4xx --check-favicon --check-html --check-external-hash"
  filter_it "$dir" "$cmd"
}

# FILTERS
prefilter_stdout() {
  grep -vP "Running \[.*\] checks on" |
  grep -vP "Checking \d+ external links\.\.\." |
  grep -vP "Ran on \d+ files!" |
  grep -vP "htmlproof [0-9.]+ |"
}

prefilter_stderr() {
  # Local errors, when /docs/ exists
  grep -v "linking to /docs/stable/elixir/Kernel.html#%7C%3E/2, but %7C%3E/2 does not exist" |
  
  # Remote errors, when /docs/ doesn't exist
  grep -vP "internally linking to \/docs\/.*, which does not exist" |
  grep -vP "trying to find hash of \/docs\/.*, but .* does not exist" |

  prefilter_stderr_extra |

  # delete every file hat has no errors (ie, any file that is not followed by a line starting with "  *  ")
  perl -0777 -pe 's/\- .*\n(?!\s+\*\s+)//g'
}

prefilter_stderr_extra() {
  perl -CSAD -pe '
    BEGIN {
      my $current_file = "";
    }
    if ( /^- / ) {
      $current_file = $_;
    } elsif ( $current_file =~ /getting_started/ ) { # ignore favicon on redirect pages
      s/\s+\*\s+no favicon specified\n//;
    }
  ' $1
}

# Improve OK/ERRROR messages
capture_std() {
  # Grab total number of documents and errors
  local total_files=$(perl -ne 'print "$1" if /Ran on (\d+) files!/' < "$STDOUT_RAW")
  local total_external_links=$(perl -ne 'print "$1" if /Checking (\d+) external links/' < "$STDOUT_RAW")
  local total_errors=$(perl -ne 'print if /^\s+\*\s+/' < "$STDERR" | wc -l)
  local error_files=$(perl -ne 'print if /^-\s+/' < "$STDERR" | wc -l)

  if [ ! -z "$total_files" ]; then
    MSG_OK="OK: ${CMD_NAME} - ${total_files} documents have been validated."
    # Do not show number of links for now, due to /docs/ not being part of this project,
    # Just to not to give the false impression that all these links are being checked.
    # Waiting for a bugfix in htmlproof to be able to rewrite links to the live site.
    #[ ! -z "$total_external_links" ] &&
    #  MSG_OK="${MSG_OK} ${total_external_links} external links have been checked."
  fi

  if [ ! -z "${total_errors}" ]; then
    MSG_ERROR="ERROR: ${CMD_NAME} - ${total_errors} errors found in ${error_files} documents."
    # Show number of documents and links if available
    [ ! -z "$total_files" ] &&
      MSG_ERROR="${MSG_ERROR} Total Documents: ${total_files}."
    [ ! -z "$total_external_links" ] &&
      MSG_ERROR="${MSG_ERROR} Total Links: ${total_external_links}."
  fi
}

# Filter it!
filter_htmlproof