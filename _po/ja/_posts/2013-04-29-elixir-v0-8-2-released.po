msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2017-10-30 15:10+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"layout: post\n"
"title: Elixir v0.8.2 released\n"
"author: JosÃ© Valim\n"
"category: Releases\n"
"excerpt: Elixir v0.8.2 is released with bug fixes, better Erlang R16 support a"
"nd doctests.\n"
"---"
msgstr ""

msgid ""
"The past week we have released Elixir v0.8.2. It contains many bug fixes and b"
"etter support for Erlang R16, including [the new built-in functions `insert_el"
"em/3` and `delete_elem/2`](https://github.com/elixir-lang/elixir/commit/0fad18"
"83df9da541628e8485d28372fd4b977b89)."
msgstr ""

msgid ""
"We have also added extensive support to ANSI escape codes. For example, by sim"
"ply upgrading to the latest Elixir you will get colored output from your test "
"suites:"
msgstr ""

msgid "![ANSI escape with ExUnit](/images/contents/exunit-ansi.png)"
msgstr ""

msgid ""
"We have also added colored output to Interactive Elixir (IEx) but it requires "
"Erlang R16."
msgstr ""

msgid ""
"Finally, Elixir has always given special attention to documentation. You can e"
"asily document functions with the `@doc` attribute:"
msgstr ""

msgid ""
"```elixir\n"
"defmodule Math do\n"
"  @doc \"\"\"\n"
"  Add two numbers together."
msgstr ""

msgid "  ## Examples"
msgstr ""

msgid ""
"      iex> Math.add(1, 2)\n"
"      3"
msgstr ""

msgid ""
"  \"\"\"\n"
"  def add(a, b) do\n"
"    a + b\n"
"  end\n"
"end\n"
"```"
msgstr ""

msgid ""
"The documentation above is embedded into the module and can be easily retrieve"
"d at runtime. For example, by typing `h Math.add/2` into Interactive Elixir, w"
"e can access the documentation for that module."
msgstr ""

msgid ""
"Elixir v0.8.2 takes this to the next level by adding support to doctests. Give"
"n the example above, you can configure Elixir to automatically run the code sa"
"mples in your documentation by including a call to the `doctest` macro in your"
" test suite:"
msgstr ""

msgid ""
"```elixir\n"
"defmodule MathTest do\n"
"  use ExUnit.Case, async: true\n"
"  doctest Math\n"
"end\n"
"```"
msgstr ""

msgid ""
"You can learn more about [doctests on our documentation page](https://hexdocs."
"pm/ex_unit/ExUnit.DocTest.html) and get more information about our latest rele"
"ase [on the CHANGELOG](https://github.com/elixir-lang/elixir/blob/ed27611f48ba"
"150404c95fe15f1d6058a4287330/CHANGELOG.md)."
msgstr ""

msgid ""
"If you are new to Elixir, [it's easy to get started with](/getting-started/int"
"roduction.html)!"
msgstr ""
