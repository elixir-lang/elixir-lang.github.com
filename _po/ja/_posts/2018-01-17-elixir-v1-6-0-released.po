msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2018-07-27 22:30+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"layout: post\n"
"title: Elixir v1.6 released\n"
"author: JosÃ© Valim\n"
"category: Releases\n"
"excerpt: Elixir v1.6 includes a code formatter, defguard, dynamic supervision "
"and new module attributes that improves code quality and the developer experie"
"nce\n"
"---"
msgstr ""

msgid ""
"Elixir v1.6 includes new features, enhancements, and bug fixes. The main featu"
"re in this release is a code formatter. Important improvements can also be fou"
"nd in the standard library and in the Mix build tool."
msgstr ""

msgid "## Code formatter"
msgstr ""

msgid ""
"The big feature in Elixir v1.6 is the addition of [a code formatter](https://h"
"exdocs.pm/elixir/Code.html#format_string!/2) and an accompanying `mix format` "
"task that adds automatic formatting to your projects."
msgstr ""

msgid ""
"The goal of the formatter is to automate the styling of codebases into a uniqu"
"e and consistent layout used across teams and the whole community. Code is now"
" easier to write, as you no longer need to concern yourself with formatting ru"
"les. Code is also easier to read, as you no longer need to convert the styles "
"of other developers in your mind."
msgstr ""

msgid ""
"The formatter also helps new developers to learn the language by giving immedi"
"ate feedback on code structure, and eases code reviews by allowing teams to fo"
"cus on business rules and code quality rather than code style."
msgstr ""

msgid ""
"To automatically format your codebase, you can run the [new `mix format` task]"
"(https://hexdocs.pm/mix/Mix.Tasks.Format.html). A `.formatter.exs` file may be"
" added to your project root for rudimentary formatter configuration. The mix t"
"ask also supports flags for CI integration. For instance, you can make your bu"
"ild or a Pull Request fail if the code is not formatted accordingly by using t"
"he `--check-formatted` flag. We also recommend developers to check their favor"
"ite editor and see if it already provides key bindings for `mix format`, allow"
"ing a file or a code snippet to be formatted without hassle."
msgstr ""

msgid ""
"The Elixir codebase itself [has already been fully formatted](https://github.c"
"om/elixir-lang/elixir/issues/6643) and all further contributions are expected "
"to contain formatted code. We recommend existing codebases to be formatted in "
"steps. While the formatter will correctly handle long lines and complex expres"
"sions, refactoring the code by breaking those into variables or smaller functi"
"ons as you format them will lead to overall cleaner and more readable codebase"
"s."
msgstr ""

msgid "## Dynamic Supervisor"
msgstr ""

msgid ""
"Supervisors in Elixir are responsible for starting, shutting down, and restart"
"ing child processes when things go wrong. Most of the interaction with supervi"
"sors happens through [the `Supervisor` module](https://hexdocs.pm/elixir/Super"
"visor.html) and it provides three main strategies: `:one_for_one`, `:rest_for_"
"one` and `:one_for_all`."
msgstr ""

msgid ""
"However, sometimes the children of a supervisor are not known upfront and are "
"rather started dynamically. For example, if you are building a web server, you"
" have each request being handled by a separate supervised process. Those cases"
" were handled in the Supervisor module under a special strategy called `:simpl"
"e_one_for_one`."
msgstr ""

msgid ""
"Unfortunately, this special strategy changed the semantics of the supervisor i"
"n regards to initialization and shutdown. Plus some APIs expected different in"
"puts or would be completely unavailable depending on the supervision strategy."
msgstr ""

msgid ""
"Elixir v1.6 addresses this issue by introducing [a new `DynamicSupervisor` mod"
"ule](https://hexdocs.pm/elixir/DynamicSupervisor.html), which encapsulates the"
" old `:simple_one_for_one` strategy and APIs in a proper module while allowing"
" the documentation and API of the `Supervisor` module to focus on its main use"
" cases. Having a separate `DynamicSupervisor` module also makes it simpler to "
"add new features to the dynamic supervisor, such as the new `:max_children` op"
"tion that limits the maximum number of children supervised dynamically."
msgstr ""

msgid "## `@deprecated` and `@since` attributes"
msgstr ""

msgid ""
"This release also introduces two new attributes associated with function defin"
"itions: `@deprecated` and `@since`. The former marks if a function or macro is"
" deprecated, the latter annotates the version the API was introduced:"
msgstr ""

msgid ""
"```elixir\n"
"@doc \"Breaks a collection into chunks\"\n"
"@since \"1.0.0\"\n"
"@deprecated \"Use chunk_every/2 instead\"\n"
"def chunk(collection, chunk_size) do\n"
"  chunk_every(collection, chunk_size)\n"
"end\n"
"```"
msgstr ""

msgid ""
"The `mix xref` task was also updated to warn if your project calls deprecated "
"code. So if a definition is marked as `@deprecated` and a module invokes it, a"
" warning will be emitted during compilation. This effectively provides librari"
"es and frameworks a mechanism to deprecate code without causing multiple warni"
"ngs to be printed in runtime and without impacting performance."
msgstr ""

msgid ""
"Note those attributes are not yet available to tools that generate documentati"
"on. Such functionality will be added in Elixir v1.7 once [Elixir adopts EEP-48"
"](https://github.com/elixir-lang/elixir/issues/7198). We still recommend devel"
"opers to start annotating their APIs so the information is already available w"
"hen the tooling is updated."
msgstr ""

msgid "## `defguard` and `defguardp`"
msgstr ""

msgid ""
"Elixir provides the concepts of guards: expressions used alongside pattern mat"
"ching to select a matching clause. Let's see an example straight from [Elixir'"
"s home page](https://elixir-lang.org):"
msgstr ""

msgid ""
"```elixir\n"
"def drive(%User{age: age}) when age >= 16 do\n"
"  # Code that drives a car\n"
"end\n"
"```"
msgstr ""

msgid ""
"`%User{age: age}` is matching on a `User` struct with an age field and `when a"
"ge >= 16` is the guard."
msgstr ""

msgid ""
"Since only a handful of constructs are [allowed in guards](https://hexdocs.pm/"
"elixir/guards.html#content), if you were in a situation where you had to check"
" the age to be more than or equal to 16 in multiple places, extracting the gua"
"rd to a separate function would be [less than obvious and error prone](https:/"
"/github.com/elixir-lang/elixir/issues/2469). To address those issues, [this re"
"lease introduces `defguard/1` and `defguardp/1`](https://hexdocs.pm/elixir/Ker"
"nel.html#defguard/1):"
msgstr ""

msgid ""
"```elixir\n"
"defguard is_old_to_drive(age) when age >= 16"
msgstr ""

msgid ""
"def drive(%User{age: age}) when is_old_to_drive(age) do\n"
"  # Code that drives a car\n"
"end\n"
"```"
msgstr ""

msgid "## IEx improvements"
msgstr ""

msgid ""
"IEx also got its share of improvements. The new code formatter allows us to pr"
"etty print code snippets, types and specifications, improving the overall expe"
"rience when exploring code through the terminal."
msgstr ""

msgid ""
"The autocomplete mechanism also got smarter, being able to provide context aut"
"ocompletion. For example, typing `t Enum.` and hitting TAB will autocomplete o"
"nly the types in Enum (in contrast to all functions). Typing `b GenServer.` an"
"d hitting TAB will autocomplete only the behaviour callbacks."
msgstr ""

msgid ""
"Finally, the breakpoint functionality added [in Elixir v1.5](https://elixir-la"
"ng.org/blog/2017/07/25/elixir-v1-5-0-released/) has been improved to support p"
"attern matching and guards. For example, to pattern match on a function call w"
"hen the first argument is the atom `:foo`, you may do:"
msgstr ""

msgid ""
"```\n"
"iex> break! SomeFunction.call(:foo, _, _)\n"
"```"
msgstr ""

msgid ""
"For more information, see [`IEx.break!/4`](https://hexdocs.pm/iex/IEx.html#bre"
"ak!/4)."
msgstr ""

msgid "## mix xref"
msgstr ""

msgid ""
"[`mix xref`](https://hexdocs.pm/mix/Mix.Tasks.Xref.html) is a task added in El"
"ixir v1.3 which provides general information about how modules and files in an"
" application depend on each other. This release brings many improvements to `x"
"ref`, extending the reach of the analysis and helping developers digest the va"
"st amount of data it produces."
msgstr ""

msgid ""
"One of such additions is the `--include-siblings` option that can be given to "
"all `xref` commands inside umbrella projects. For example, to find all of the "
"callers of a given module or function of an application in an umbrella:"
msgstr ""

msgid ""
"```\n"
"$ mix xref callers SomeModule --include-siblings\n"
"```"
msgstr ""

msgid ""
"The `graph` command in `mix xref` now can also output general statistics about"
" the graph. In [the hexpm project](https://github.com/hexpm/hexpm), you would "
"get:"
msgstr ""

msgid ""
"```\n"
"$ mix xref graph --format stats\n"
"Tracked files: 129 (nodes)\n"
"Compile dependencies: 256 (edges)\n"
"Structs dependencies: 46 (edges)\n"
"Runtime dependencies: 266 (edges)"
msgstr ""

msgid ""
"Top 10 files with most outgoing dependencies:\n"
"  * test/support/factory.ex (18)\n"
"  * lib/hexpm/accounts/user.ex (13)\n"
"  * lib/hexpm/accounts/audit_log.ex (12)\n"
"  * lib/hexpm/web/controllers/dashboard_controller.ex (12)\n"
"  * lib/hexpm/repository/package.ex (12)\n"
"  * lib/hexpm/repository/releases.ex (11)\n"
"  * lib/hexpm/repository/release.ex (10)\n"
"  * lib/hexpm/web/controllers/package_controller.ex (10)\n"
"  * lib/mix/tasks/hexpm.stats.ex (9)\n"
"  * lib/hexpm/repository/registry_builder.ex (9)"
msgstr ""

msgid ""
"Top 10 files with most incoming dependencies:\n"
"  * lib/hexpm/web/web.ex (84)\n"
"  * lib/hexpm/web/router.ex (29)\n"
"  * lib/hexpm/web/controllers/controller_helpers.ex (29)\n"
"  * lib/hexpm/web/controllers/auth_helpers.ex (28)\n"
"  * lib/hexpm/web/views/view_helpers.ex (27)\n"
"  * lib/hexpm/web/views/icons.ex (27)\n"
"  * lib/hexpm/web/endpoint.ex (23)\n"
"  * lib/hexpm/ecto/changeset.ex (22)\n"
"  * lib/hexpm/accounts/user.ex (19)\n"
"  * lib/hexpm/repo.ex (19)\n"
"```"
msgstr ""

msgid ""
"`mix xref graph` also got the `--only-nodes` and `--label` options. The former"
" asks Mix to only output file names (nodes) without the edges. The latter allo"
"ws you to focus on certain relationships:"
msgstr ""

msgid ""
"```\n"
"# To get all files that depend on lib/foo.ex\n"
"mix xref graph --sink lib/foo.ex --only-nodes"
msgstr ""

msgid ""
"# To get all files that depend on lib/foo.ex at compile time\n"
"mix xref graph --label compile --sink lib/foo.ex --only-nodes"
msgstr ""

msgid ""
"# To get all files lib/foo.ex depends on\n"
"mix xref graph --source lib/foo.ex --only-nodes"
msgstr ""

msgid ""
"# To limit statistics only to compile time dependencies\n"
"mix xref graph --format stats --label compile\n"
"```"
msgstr ""

msgid ""
"Those improvements will help developers better understand the relationship bet"
"ween files and reveal potentially complex parts of their systems."
msgstr ""

msgid ""
"Other improvements in Mix include [better compiler diagnostics](https://hexdoc"
"s.pm/mix/Mix.Task.Compiler.html) for editor integration, support for [the `--s"
"lowest N` flag in `mix test`](https://hexdocs.pm/mix/Mix.Tasks.Test.html) that"
" shows the slowest tests in your suite, and a new [`mix profile.eprof` task](h"
"ttps://hexdocs.pm/mix/Mix.Tasks.Eprof.html) that provides time based profiling"
", complementing the existing [`mix profile.cprof` (count based)](https://hexdo"
"cs.pm/mix/Mix.Tasks.Profile.Cprof.html) and [`mix profile.fprof` (flame based)"
"](https://hexdocs.pm/mix/Mix.Tasks.Profile.Fprof.html)."
msgstr ""

msgid "## Summing up"
msgstr ""

msgid ""
"The full list of changes is available in our [release notes](https://github.co"
"m/elixir-lang/elixir/releases/tag/v1.6.0). There are many other exciting chang"
"es, such as compiler enhancements to better track dependencies, leading to les"
"s files being recompiled whenever there are changes in project, and overall fa"
"ster compilation."
msgstr ""

msgid ""
"Work on Elixir v1.7 has already started. We still welcome developers to try ou"
"t the [previously announced StreamData library](https://elixir-lang.org/blog/2"
"017/10/31/stream-data-property-based-testing-and-data-generation-for-elixir/),"
" that aims to bring data generation and property-based testing to Elixir. The "
"other [features scheduled for v1.7 can be found in the issues tracker](https:/"
"/github.com/elixir-lang/elixir/issues)."
msgstr ""

msgid ""
"Don't forget to check [the Install section](/install.html) to get Elixir insta"
"lled and our [Getting Started guide](http://elixir-lang.org/getting-started/in"
"troduction.html) to learn more."
msgstr ""
