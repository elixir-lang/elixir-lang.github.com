msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2018-07-27 22:30+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"layout: getting-started\n"
"title: Where to go next\n"
"---"
msgstr ""

msgid "# {{ page.title }}"
msgstr ""

msgid "{% include toc.html %}"
msgstr ""

msgid "Eager to learn more? Keep reading!"
msgstr ""

msgid "## Build your first Elixir project"
msgstr ""

msgid ""
"In order to get your first project started, Elixir ships with a build tool cal"
"led Mix. You can get your new project started by running:"
msgstr ""

msgid ""
"```console\n"
"$ mix new path/to/new/project\n"
"```"
msgstr ""

msgid ""
"We have written a guide that covers how to build an Elixir application, with i"
"ts own supervision tree, configuration, tests, and more. The application works"
" as a distributed key-value store where we organize key-value pairs into bucke"
"ts and distribute those buckets across multiple nodes:"
msgstr ""

msgid "* [Mix and OTP](/getting-started/mix-otp/introduction-to-mix.html)"
msgstr ""

msgid ""
"If you are planning to write your first library for other developers to use, d"
"on't forget to read our [Library Guidelines](https://hexdocs.pm/elixir/library"
"-guidelines.html)."
msgstr ""

msgid "## Meta-programming"
msgstr ""

msgid ""
"Elixir is an extensible and very customizable programming language thanks to i"
"ts meta-programming support. Most meta-programming in Elixir is done through m"
"acros, which are very useful in several situations, especially for writing DSL"
"s. We have written a short guide that explains the basic mechanisms behind mac"
"ros, shows how to write macros, and how to use macros to create DSLs:"
msgstr ""

msgid "* [Meta-programming in Elixir](/getting-started/meta/quote-and-unquote.html)"
msgstr ""

msgid "## Community and other resources"
msgstr ""

msgid ""
"We have a [Learning](/learning.html) section that suggests books, screencasts,"
" and other resources for learning Elixir and exploring the ecosystem. There ar"
"e also plenty of Elixir resources out there, like conference talks, open sourc"
"e projects, and other learning material produced by the community."
msgstr ""

msgid ""
"Don't forget that you can also check the [source code of Elixir itself](https:"
"//github.com/elixir-lang/elixir), which is mostly written in Elixir (mainly th"
"e `lib` directory), or [explore Elixir's documentation](/docs.html)."
msgstr ""

msgid "## A byte of Erlang"
msgstr ""

msgid ""
"Elixir runs on the Erlang Virtual Machine and, sooner or later, an Elixir deve"
"loper will want to interface with existing Erlang libraries. Here's a list of "
"online resources that cover Erlang's fundamentals and its more advanced featur"
"es:"
msgstr ""

msgid ""
"* This [Erlang Syntax: A Crash Course](/crash-course.html) provides a concise "
"intro to Erlang's syntax. Each code snippet is accompanied by equivalent code "
"in Elixir. This is an opportunity for you to not only get some exposure to Erl"
"ang's syntax but also review some of the things you have learned in this guide"
"."
msgstr ""

msgid ""
"* Erlang's official website has a short [tutorial](http://www.erlang.org/cours"
"e/concurrent_programming.html) with pictures that briefly describe Erlang's pr"
"imitives for concurrent programming."
msgstr ""

msgid ""
"* [Learn You Some Erlang for Great Good!](http://learnyousomeerlang.com/) is a"
"n excellent introduction to Erlang, its design principles, standard library, b"
"est practices, and much more. Once you have read through the crash course ment"
"ioned above, you'll be able to safely skip the first couple of chapters in the"
" book that mostly deal with the syntax. When you reach [The Hitchhiker's Guide"
" to Concurrency](http://learnyousomeerlang.com/the-hitchhikers-guide-to-concur"
"rency) chapter, that's where the real fun starts."
msgstr ""
