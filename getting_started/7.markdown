---
layout: getting_started
title: 7. Where To Go Next
guide: 7
---

# 7 Where To Go Next

## 7.1 Sample Code

Elixir has more features to offer than what has been described so far, but you should already be comfortable enough to start coding. Here is a bunch of links that'll help you get started:

* This small and simple [chat application](https://gist.github.com/2221616) shows the basics of working with processes.

* [ExReminder](https://github.com/alco/ExReminder). This is a more sophisticated application based on a chapter from the _Learn You Some Erlang_ book.

* [WebSocket Server](https://github.com/alco/ws-elixir) demonstrates an approach to building a web server that supports custom protocols communicating via WebSockets.

## 7.2 A Byte of Erlang

As the main page of this site puts it,

> Elixir is a programming language built on top of the Erlang VM.

So, in order to write a real application with Elixir, familiarity with Erlang's concepts is required. Here's a list of online resources that cover Erlang's fundamentals and its more advanced features:

* This [Erlang Syntax: A Crash Course][1] provides a concise intro to Erlang's syntax. Each code snippet is accompanied by equivalent code in Elixir. This is an opportunity for you to not only get some exposure to the Erlang's syntax but also review some of the things you have learned in the present guide.

* Erlang's official website has a short [tutorial][2] with pictures that briefly describe Erlang's primitives for concurrent programming.

* A larger and more comprehensive [guide][3] from Erlang's official documentation site.

* [Learn You Some Erlang for Great Good!][4] is an excellent introduction to Erlang, its design principles, standard library, best practices and much more. If you are serious about Elixir, you'll want to get a solid understanding of the principles Erlang based upon. Once you have read through the crash course mentioned above, you'll be able to safely skip the first couple of chapters in the book that mostly deal with the syntax. When you reach [The Hitchhiker's Guide to Concurrency][5] chapter, that's where the real fun starts.

## 7.3 Reference Manual

[You can also check the source code of Elixir itself](https://github.com/elixir-lang/elixir/tree/master/lib), which is mainly written in Elixir, or [explore Elixir's documentation][8].

## 7.4 Join The Community

Remember that in case of any difficulties, you can always visit the **#elixir-lang** channel on **irc.freenode.net** or send a message to the [mailing list][6]. You can be sure that there will be someone willing to help.

  [1]: https://github.com/alco/elixir/wiki/Erlang-Syntax:-A-Crash-Course
  [2]: http://www.erlang.org/course/concurrent_programming.html
  [3]: http://www.erlang.org/doc/getting_started/users_guide.html
  [4]: http://learnyousomeerlang.com/
  [5]: http://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency
  [6]: http://groups.google.com/group/elixir-lang-core
  [7]: https://github.com/elixir-lang/elixir/tree/master/lib
  [8]: http://elixir-lang.org/docs/
