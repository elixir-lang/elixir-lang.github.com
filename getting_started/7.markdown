---
layout: getting_started
title: 7 Where To Go Next
guide: 7
total_guides: 7
---

# {{ page.title }}

## 7.1 Applications

In order to get your first project started, Elixir ships with a build tool called [`Mix`](/getting_started/mix/1.html). You can get your new project started by simply running:

    mix new path/to/new/project

You can learn more about Elixir and other applications in the links below:

* [Mix - a build tool for Elixir](/getting_started/mix/1.html)
* [ExUnit - a unit test framework](/getting_started/ex_unit/1.html)

## 7.2 A Byte of Erlang

As the main page of this site puts it:

> Elixir is a programming language built on top of the Erlang VM.

Sooner than later, an Elixir developer will want to interface with existing Erlang libraries. Here's a list of online resources that cover Erlang's fundamentals and its more advanced features:

* This [Erlang Syntax: A Crash Course][1] provides a concise intro to Erlang's syntax. Each code snippet is accompanied by equivalent code in Elixir. This is an opportunity for you to not only get some exposure to the Erlang's syntax but also review some of the things you have learned in the present guide.

* Erlang's official website has a short [tutorial][2] with pictures that briefly describe Erlang's primitives for concurrent programming.

* [Learn You Some Erlang for Great Good!][4] is an excellent introduction to Erlang, its design principles, standard library, best practices and much more. If you are serious about Elixir, you'll want to get a solid understanding of Erlang principles. Once you have read through the crash course mentioned above, you'll be able to safely skip the first couple of chapters in the book that mostly deal with the syntax. When you reach [The Hitchhiker's Guide to Concurrency][5] chapter, that's where the real fun starts.

## 7.3 Reference Manual

[You can also check the source code of Elixir itself][3], which is mainly written in Elixir (mainly the `lib` directory), or [explore Elixir's documentation][7].

## 7.4 Join The Community

Remember that in case of any difficulties, you can always visit the **#elixir-lang** channel on **irc.freenode.net** or send a message to the [mailing list][6]. You can be sure that there will be someone willing to help.

  [1]: http://elixir-lang.org/crash-course.html
  [2]: http://www.erlang.org/course/concurrent_programming.html
  [3]: https://github.com/elixir-lang/elixir
  [4]: http://learnyousomeerlang.com/
  [5]: http://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency
  [6]: http://groups.google.com/group/elixir-lang-core
  [7]: http://elixir-lang.org/docs/
